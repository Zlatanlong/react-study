{"ast":null,"code":"var _jsxFileName = \"/Users/zlatan/Documents/js-study/my-app/src/index.js\";\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState((a, b) => console.log(a, b));\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.isToggleOn ? 'ON' : 'OFF');\n  }\n\n}\n\nReactDOM.render(React.createElement(Toggle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/zlatan/Documents/js-study/my-app/src/index.js"],"names":["Toggle","React","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","a","b","console","log","prevState","render","ReactDOM","document","getElementById"],"mappings":";;AAAA,MAAMA,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFiB,CAIjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAc,CAACC,CAAD,EAAGC,CAAH,KAAQC,OAAO,CAACC,GAAR,CAAYH,CAAZ,EAAcC,CAAd,CAAtB;AACA,SAAKF,QAAL,CAAcK,SAAS,KAAK;AAC1BR,MAAAA,UAAU,EAAE,CAACQ,SAAS,CAACR;AADG,KAAL,CAAvB;AAGD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,CADF;AAKD;;AAtBkC;;AAyBrCU,QAAQ,CAACD,MAAT,CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["class Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState((a,b)=> console.log(a,b))\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    );\n  }\n}\n\nReactDOM.render(\n  <Toggle />,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}