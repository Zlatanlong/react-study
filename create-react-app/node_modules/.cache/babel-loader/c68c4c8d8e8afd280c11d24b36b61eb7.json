{"ast":null,"code":"var _jsxFileName = \"/Users/zlatan/Documents/js-study/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import App from './App'\n\nimport Redux, { createStore } from 'redux'; // 用于产生动作 必须对对象赋予新的值\n\nconst reducer = function (state = {\n  num: 0\n}, action) {\n  switch (action.type) {\n    case 'add':\n      state = { ...state,\n        num: state.num + action.howmany\n      };\n      break;\n\n    case 'cut':\n      state = { ...state,\n        num: state.num - 1\n      };\n      break;\n\n    default:\n  }\n\n  console.log('state', state);\n  return state;\n};\n\nconst store = createStore(reducer);\nconsole.log('store', store);\n\nfunction add() {\n  // 通过仓库的方法dispatch进行修改数据\n  store.dispatch({\n    type: 'add',\n    howmany: 2\n  });\n}\n\nfunction cut() {\n  // 通过仓库的方法dispatch进行修改数据\n  store.dispatch({\n    type: 'cut'\n  });\n}\n\nconst Counter = function (props) {\n  let count = store.getState().num;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\u8BA1\\u6570\\u6570\\u91CF\", count), React.createElement(\"button\", {\n    onClick: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\u8BA1\\u6570 + 2\"), React.createElement(\"button\", {\n    onClick: cut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\u8BA1\\u6570 - 1\"));\n};\n\nstore.subscribe(() => {\n  ReactDOM.render(React.createElement(Counter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), document.getElementById('root'));\n});\nReactDOM.render(React.createElement(Counter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/zlatan/Documents/js-study/my-app/src/index.js"],"names":["React","ReactDOM","Redux","createStore","reducer","state","num","action","type","howmany","console","log","store","add","dispatch","cut","Counter","props","count","getState","subscribe","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAOC,KAAP,IAAeC,WAAf,QAAiC,OAAjC,C,CAEA;;AACA,MAAMC,OAAO,GAAG,UAAUC,KAAK,GAAG;AAACC,EAAAA,GAAG,EAAE;AAAN,CAAlB,EAA4BC,MAA5B,EAAoC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACEH,MAAAA,KAAK,GAAG,EAAC,GAAGA,KAAJ;AAAWC,QAAAA,GAAG,EAAED,KAAK,CAACC,GAAN,GAAYC,MAAM,CAACE;AAAnC,OAAR;AACA;;AACF,SAAK,KAAL;AACEJ,MAAAA,KAAK,GAAG,EAAC,GAAGA,KAAJ;AAAWC,QAAAA,GAAG,EAAED,KAAK,CAACC,GAAN,GAAY;AAA5B,OAAR;AACA;;AACF;AAPF;;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;AACA,SAAOA,KAAP;AACD,CAZD;;AAcA,MAAMO,KAAK,GAAGT,WAAW,CAACC,OAAD,CAAzB;AACAM,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;;AAGA,SAASC,GAAT,GAAe;AACb;AACAD,EAAAA,KAAK,CAACE,QAAN,CAAe;AAACN,IAAAA,IAAI,EAAE,KAAP;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAf;AACD;;AAED,SAASM,GAAT,GAAe;AACb;AACAH,EAAAA,KAAK,CAACE,QAAN,CAAe;AAACN,IAAAA,IAAI,EAAE;AAAP,GAAf;AACD;;AAGD,MAAMQ,OAAO,GAAG,UAAUC,KAAV,EAAiB;AAC/B,MAAIC,KAAK,GAAGN,KAAK,CAACO,QAAN,GAAiBb,GAA7B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAASY,KAAT,CADF,EAGE;AAAQ,IAAA,OAAO,EAAEL,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAQ,IAAA,OAAO,EAAEE,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CADF;AAQD,CAVD;;AAYAH,KAAK,CAACQ,SAAN,CAAgB,MAAK;AACnBnB,EAAAA,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B;AACD,CAFD;AAGAtB,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App'\nimport Redux, {createStore} from 'redux'\n\n// 用于产生动作 必须对对象赋予新的值\nconst reducer = function (state = {num: 0}, action) {\n  switch (action.type) {\n    case 'add':\n      state = {...state, num: state.num + action.howmany};\n      break;\n    case 'cut':\n      state = {...state, num: state.num - 1};\n      break;\n    default:\n  }\n  console.log('state', state);\n  return state\n};\n\nconst store = createStore(reducer);\nconsole.log('store', store);\n\n\nfunction add() {\n  // 通过仓库的方法dispatch进行修改数据\n  store.dispatch({type: 'add',howmany: 2});\n}\n\nfunction cut() {\n  // 通过仓库的方法dispatch进行修改数据\n  store.dispatch({type: 'cut'});\n}\n\n\nconst Counter = function (props) {\n  let count = store.getState().num;\n  return (\n    <div>\n      <h1>计数数量{count}</h1>\n\n      <button onClick={add}>计数 + 2</button>\n      <button onClick={cut}>计数 - 1</button>\n    </div>\n  )\n};\n\nstore.subscribe(()=> {\n  ReactDOM.render(<Counter/>, document.getElementById('root'));\n});\nReactDOM.render(<Counter/>, document.getElementById('root'));\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}