{"ast":null,"code":"var _jsxFileName = \"/Users/zlatan/Documents/js-study/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction FormattedDate(props) {\n  return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, \"It is \", props.date.toLocaleTimeString(), \".\");\n}\n\nclass Clock extends React.Component {\n  constructor(props) {\n    // 构造函数是唯一可以给 this.state 赋值的地方\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    //尽管 this.props 和 this.state 是 React 本身设置的，且都拥有特殊的含义，但是其实你可以向 class 中随意添加不参与数据流（比如计时器 ID）的额外字段。\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    // 注意要用set方法而不是直接赋值\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Hello, world!\"), React.createElement(FormattedDate, {\n      date: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass LoggingButton extends React.Component {\n  handleClick() {\n    console.log('this is:', this);\n  }\n\n  render() {\n    // 此语法确保 `handleClick` 内的 `this` 已被绑定。\n    return React.createElement(\"button\", {\n      onClick: e => this.handleClick(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Click me\");\n  }\n\n}\n\nfunction App() {\n  // 每个 Clock 组件都会单独设置它自己的计时器并且更新它。\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(LoggingButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Clock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/zlatan/Documents/js-study/my-app/src/index.js"],"names":["React","ReactDOM","FormattedDate","props","date","toLocaleTimeString","Clock","Component","constructor","state","Date","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","LoggingButton","handleClick","console","log","e","App","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWA,KAAK,CAACC,IAAN,CAAWC,kBAAX,EAAX,MAAP;AACD;;AAED,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN;AACA,SAAKM,KAAL,GAAa;AAACL,MAAAA,IAAI,EAAE,IAAIM,IAAJ;AAAP,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKC,IAAL,EADkB,EAExB,IAFwB,CAA1B;AAID;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD;;AAEDE,EAAAA,IAAI,GAAG;AACL;AACA,SAAKG,QAAL,CAAc;AACZb,MAAAA,IAAI,EAAE,IAAIM,IAAJ;AADM,KAAd;AAGD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWL,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjCiC;;AAoCpC,MAAMe,aAAN,SAA4BnB,KAAK,CAACO,SAAlC,CAA4C;AAC1Ca,EAAAA,WAAW,GAAG;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,IAAxB;AACD;;AAEDJ,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAQ,MAAA,OAAO,EAAGK,CAAD,IAAO,KAAKH,WAAL,CAAiBG,CAAjB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AAZyC;;AAe5C,SAASC,GAAT,GAAe;AACb;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAEDvB,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nfunction FormattedDate(props) {\n  return <h2>It is {props.date.toLocaleTimeString()}.</h2>;\n}\n\nclass Clock extends React.Component {\n  constructor(props) {\n    // 构造函数是唯一可以给 this.state 赋值的地方\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    //尽管 this.props 和 this.state 是 React 本身设置的，且都拥有特殊的含义，但是其实你可以向 class 中随意添加不参与数据流（比如计时器 ID）的额外字段。\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    // 注意要用set方法而不是直接赋值\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <FormattedDate date={this.state.date} />\n      </div>\n    );\n  }\n}\n\nclass LoggingButton extends React.Component {\n  handleClick() {\n    console.log('this is:', this);\n  }\n\n  render() {\n    // 此语法确保 `handleClick` 内的 `this` 已被绑定。\n    return (\n      <button onClick={(e) => this.handleClick(e)}>\n        Click me\n      </button>\n    );\n  }\n}\n\nfunction App() {\n  // 每个 Clock 组件都会单独设置它自己的计时器并且更新它。\n  return (\n    <div>\n      <LoggingButton />\n      <Clock />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}